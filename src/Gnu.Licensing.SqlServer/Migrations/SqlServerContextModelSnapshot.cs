// <auto-generated />
using System;
using Gnu.Licensing.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gnu.Licensing.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gnu.Licensing.Core.Entities.LicenseActivation", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributesChecksum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChecksumType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LicenseAttributes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseChecksum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LicenseUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductUuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LicenseId");

                    b.HasIndex("LicenseId", "IsActive")
                        .IsUnique();

                    b.ToTable("LicenseActivation");
                });

            modelBuilder.Entity("Gnu.Licensing.Core.Entities.LicenseCompany", b =>
                {
                    b.Property<int>("LicenseCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CompanyUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("bc994b2f-dff0-477f-a1d2-0e76c7d9319e"));

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 28, 7, 20, 58, 970, DateTimeKind.Utc).AddTicks(426));

                    b.HasKey("LicenseCompanyId");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.HasIndex("CompanyUuid")
                        .IsUnique();

                    b.HasIndex("LicenseCompanyId", "CompanyName")
                        .IsUnique();

                    b.ToTable("LicenseCompany");
                });

            modelBuilder.Entity("Gnu.Licensing.Core.Entities.LicenseProduct", b =>
                {
                    b.Property<int>("LicenseProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 28, 7, 20, 58, 971, DateTimeKind.Utc).AddTicks(9978));

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ProductUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("866689d0-2efe-4ca3-8792-84ce89b11e25"));

                    b.Property<string>("SignKeyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LicenseProductId");

                    b.HasIndex("ProductName")
                        .IsUnique();

                    b.HasIndex("ProductUuid")
                        .IsUnique();

                    b.HasIndex("LicenseProductId", "ProductName")
                        .IsUnique();

                    b.ToTable("LicenseProduct");
                });

            modelBuilder.Entity("Gnu.Licensing.Core.Entities.LicenseRegistration", b =>
                {
                    b.Property<int>("LicenseRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 28, 7, 20, 58, 974, DateTimeKind.Utc).AddTicks(8762));

                    b.Property<DateTime?>("ExpireUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LicenseEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LicenseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LicenseType")
                        .HasColumnType("int");

                    b.Property<Guid>("LicenseUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("001b0e8e-e6e4-4deb-87e8-c655dfb1d1d8"));

                    b.Property<Guid>("ProductUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("LicenseRegistrationId");

                    b.HasIndex("LicenseUuid")
                        .IsUnique();

                    b.HasIndex("LicenseRegistrationId", "LicenseName", "LicenseEmail", "IsActive")
                        .IsUnique();

                    b.ToTable("LicenseRegistration");
                });
#pragma warning restore 612, 618
        }
    }
}
