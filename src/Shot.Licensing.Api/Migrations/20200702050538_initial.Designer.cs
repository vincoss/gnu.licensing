// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shot.Licensing.Api.Data;

namespace Shot.Licensing.Api.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20200702050538_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Shot.Licensing.Api.Data.License", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AttributesChecksum")
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("ChecksumType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12) COLLATE NOCASE");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("DATETIME");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(true);

                    b.Property<string>("LicenseAttributes")
                        .HasColumnType("NVARCHAR COLLATE NOCASE");

                    b.Property<string>("LicenseChecksum")
                        .IsRequired()
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("LicenseString")
                        .IsRequired()
                        .HasColumnType("NVARCHAR COLLATE NOCASE");

                    b.Property<Guid>("LicenseUuid")
                        .HasColumnType("VARCHAR(36)");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("ModifiedDateTimeUtc")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("ProductUuid")
                        .HasColumnType("VARCHAR(36)");

                    b.HasKey("LicenseId");

                    b.HasIndex("LicenseId", "IsActive")
                        .IsUnique();

                    b.ToTable("License");
                });

            modelBuilder.Entity("Shot.Licensing.Api.Data.LicenseProduct", b =>
                {
                    b.Property<int>("LicenseProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2020, 7, 2, 5, 5, 37, 834, DateTimeKind.Utc).AddTicks(3311));

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1024) COLLATE NOCASE");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256) COLLATE NOCASE");

                    b.Property<Guid>("ProductUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(36)")
                        .HasDefaultValue(new Guid("859b61f4-6ee5-4b19-b3d8-259421726ef2"));

                    b.Property<string>("SignKeyName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64) COLLATE NOCASE");

                    b.HasKey("LicenseProductId");

                    b.HasIndex("ProductName")
                        .IsUnique();

                    b.HasIndex("ProductUuid")
                        .IsUnique();

                    b.HasIndex("LicenseProductId", "ProductName")
                        .IsUnique();

                    b.ToTable("LicenseProduct");
                });

            modelBuilder.Entity("Shot.Licensing.Api.Data.LicenseRegistration", b =>
                {
                    b.Property<int>("LicenseRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2020, 7, 2, 5, 5, 37, 838, DateTimeKind.Utc).AddTicks(1422));

                    b.Property<DateTime?>("Expire")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(true);

                    b.Property<string>("LicenseEmail")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256) COLLATE NOCASE");

                    b.Property<string>("LicenseName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256) COLLATE NOCASE");

                    b.Property<int>("LicenseType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("LicenseUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(36)")
                        .HasDefaultValue(new Guid("d9ced311-0533-4d64-8bd7-0b2288999a6b"));

                    b.Property<Guid>("ProductUuid")
                        .HasColumnType("VARCHAR(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("LicenseRegistrationId");

                    b.HasIndex("LicenseUuid")
                        .IsUnique();

                    b.HasIndex("LicenseRegistrationId", "LicenseName", "LicenseEmail", "IsActive")
                        .IsUnique();

                    b.ToTable("LicenseRegistration");
                });
#pragma warning restore 612, 618
        }
    }
}
