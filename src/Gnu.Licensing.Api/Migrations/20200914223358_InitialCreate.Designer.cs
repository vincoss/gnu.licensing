// <auto-generated />
using System;
using Gnu.Licensing.Svr.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gnu.Licensing.Svr.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20200914223358_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("Gnu.Licensing.Svr.Data.License", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AttributesChecksum")
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("ChecksumType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12) COLLATE NOCASE");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("DATETIME");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(true);

                    b.Property<string>("LicenseAttributes")
                        .HasColumnType("NVARCHAR COLLATE NOCASE");

                    b.Property<string>("LicenseChecksum")
                        .IsRequired()
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("LicenseString")
                        .IsRequired()
                        .HasColumnType("NVARCHAR COLLATE NOCASE");

                    b.Property<Guid>("LicenseUuid")
                        .HasColumnType("VARCHAR(36)");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("ModifiedDateTimeUtc")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("ProductUuid")
                        .HasColumnType("INTEGER");

                    b.HasKey("LicenseId");

                    b.HasIndex("LicenseId", "IsActive")
                        .IsUnique();

                    b.ToTable("License");
                });

            modelBuilder.Entity("Gnu.Licensing.Svr.Data.LicenseCompany", b =>
                {
                    b.Property<int>("LicenseCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256) COLLATE NOCASE");

                    b.Property<Guid>("CompanyUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(36)")
                        .HasDefaultValue(new Guid("d1b66fd1-adad-4ef8-8aa8-2c66bbdfb4d0"));

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2020, 9, 14, 22, 33, 57, 935, DateTimeKind.Utc).AddTicks(9662));

                    b.HasKey("LicenseCompanyId");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.HasIndex("CompanyUuid")
                        .IsUnique();

                    b.HasIndex("LicenseCompanyId", "CompanyName")
                        .IsUnique();

                    b.ToTable("LicenseCompany");
                });

            modelBuilder.Entity("Gnu.Licensing.Svr.Data.LicenseProduct", b =>
                {
                    b.Property<int>("LicenseProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2020, 9, 14, 22, 33, 57, 938, DateTimeKind.Utc).AddTicks(4133));

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1024) COLLATE NOCASE");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256) COLLATE NOCASE");

                    b.Property<Guid>("ProductUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(36)")
                        .HasDefaultValue(new Guid("50db85a5-011c-4d25-b14b-b056d272162b"));

                    b.Property<string>("SignKeyName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64) COLLATE NOCASE");

                    b.HasKey("LicenseProductId");

                    b.HasIndex("ProductName")
                        .IsUnique();

                    b.HasIndex("ProductUuid")
                        .IsUnique();

                    b.HasIndex("LicenseProductId", "ProductName")
                        .IsUnique();

                    b.ToTable("LicenseProduct");
                });

            modelBuilder.Entity("Gnu.Licensing.Svr.Data.LicenseRegistration", b =>
                {
                    b.Property<int>("LicenseRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64) COLLATE NOCASE");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2020, 9, 14, 22, 33, 57, 941, DateTimeKind.Utc).AddTicks(9154));

                    b.Property<DateTime?>("ExpireUtc")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(true);

                    b.Property<string>("LicenseEmail")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256) COLLATE NOCASE");

                    b.Property<string>("LicenseName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256) COLLATE NOCASE");

                    b.Property<int>("LicenseType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("LicenseUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(36)")
                        .HasDefaultValue(new Guid("2ccf8d25-24e9-447b-9f0a-5b09f5e3fda8"));

                    b.Property<Guid>("ProductUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(36)")
                        .HasDefaultValue(new Guid("35f7c237-fdb9-4847-bcf3-47e6e8e696c5"));

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("LicenseRegistrationId");

                    b.HasIndex("LicenseUuid")
                        .IsUnique();

                    b.HasIndex("LicenseRegistrationId", "LicenseName", "LicenseEmail", "IsActive")
                        .IsUnique();

                    b.ToTable("LicenseRegistration");
                });
#pragma warning restore 612, 618
        }
    }
}
